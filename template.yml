services:

  loader: &loader_definition
    build:
      context: ./build-context/
      dockerfile: Dockerfile
    volumes:
    - $PWD/embedding_model:/embedding_model
    environment: &environment
      NEO4J_URI: ${NEO4J_URI-neo4j://database:7687}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD-password}
      NEO4J_USERNAME: ${NEO4J_USERNAME-neo4j}
      NEO4J_DATABASE: ${NEO4J_DATABASE-neo4j}
      OPENAI_API_KEY: ${OPENAI_API_KEY-}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY-}
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL-http://host.docker.internal:11434}
      LLM: ${LLM-llama2}
      EMBEDDING_MODEL: ${EMBEDDING_MODEL-sentence_transformer}
      LANGCHAIN_ENDPOINT: ${LANGCHAIN_ENDPOINT-"https://api.smith.langchain.com"}
      LANGCHAIN_TRACING_V2: ${LANGCHAIN_TRACING_V2-false}
      LANGCHAIN_PROJECT: ${LANGCHAIN_PROJECT-}
      LANGCHAIN_API_KEY: ${LANGCHAIN_API_KEY-}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY-}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION-}
      STREAMLIT_FILE: loader.py
    networks:
    - net
    depends_on:
      database:
        condition: service_healthy
      database-seeding:
        condition: service_completed_successfully
    develop:
      watch:
      - action: rebuild
        path: .
        ignore:
        - pdf_bot.py
        - front-end/

  bot:
    <<: *loader_definition
    environment: 
      <<: *environment
      STREAMLIT_FILE: bot.py

  api:
    <<: *loader_definition
    entrypoint:  [ "uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8080" ]
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080"]
      interval: 5s
      timeout: 3s
      retries: 5

  # front-end:
  #   build:
  #     context: .
  #     dockerfile: front-end.Dockerfile
  #   x-develop:
  #     watch:
  #       - action: sync
  #         path: ./front-end
  #         target: /app
  #         ignore:
  #           - ./front-end/node_modules/
  #       - action: rebuild
  #         path: ./front-end/package.json
  #   depends_on:
  #     api:
  #       condition: service_healthy
  #   networks:
  #     - net
  #   ports:
  #     - 8505:8505

