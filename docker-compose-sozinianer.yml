services:

  sozinianer-loader:
    extends:
      file: template.yml
      service: loader
    # build:
    #   context: .
    #   dockerfile: loader.Dockerfile
    volumes:
      - $PWD/embedding_model:/embedding_model
    environment: &sozinianer_env
      NEO4J_DATABASE: sozinianer
      PREPARATION_QUERY: match (t:Text{type:'abstract'}) set t:Abstract
      LABEL: Abstract
      PROPERTY_IDENTIFIER: guid
      PROPERTY_TEXT: text
      PROPERTY_EMBEDDING: embedding
      RETRIEVAL_QUERY: |
        MATCH (node)<-[:HAS_TEXT]-(m:Metadata)
        WITH node, score, 'https://sozinianer.mni.thm.de/view/' + m.guid AS url
        MATCH (node)-[:HAS_ANNOTATION]->(a:Spo)
        WHERE not a.teiType in ['p']
        WITH node, score, collect(a) as annotations, url
        RETURN reduce(str='###Personen und Orte:\n', x in annotations | str + coalesce(x.type, x.teiType) + ': ' + x.text + '\n' ) + 
            '\n###Text: ' + node.text AS text,
            score,
            { source: url } AS metadata
        ORDER BY score ASC

    ports:
      - 8081:8080
      - 8502:8502

  sozinianer-bot:
    extends:
      file: template.yml
      service: bot
    # build:
    #   context: .
    #   dockerfile: bot.Dockerfile
    volumes:
      - $PWD/embedding_model:/embedding_model
    environment:
      *sozinianer_env
    ports:
      - 8501:8501

  # pdf_bot:
  #   build:
  #     context: .
  #     dockerfile: pdf_bot.Dockerfile
  #   environment:
  #     - NEO4J_URI=${NEO4J_URI-neo4j://database:7687}
  #     - NEO4J_PASSWORD=${NEO4J_PASSWORD-password}
  #     - NEO4J_USERNAME=${NEO4J_USERNAME-neo4j}
  #     - OPENAI_API_KEY=${OPENAI_API_KEY-}
  #     - GOOGLE_API_KEY=${GOOGLE_API_KEY-}
  #     - OLLAMA_BASE_URL=${OLLAMA_BASE_URL-http://host.docker.internal:11434}
  #     - LLM=${LLM-llama2}
  #     - EMBEDDING_MODEL=${EMBEDDING_MODEL-sentence_transformer}
  #     - LANGCHAIN_ENDPOINT=${LANGCHAIN_ENDPOINT-"https://api.smith.langchain.com"}
  #     - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2-false}
  #     - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}
  #     - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #     - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
  #   networks:
  #     - net
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #     pull-model:
  #       condition: service_completed_successfully
  #   x-develop:
  #     watch:
  #       - action: rebuild
  #         path: .
  #         ignore:
  #           - loader.py
  #           - bot.py
  #           - api.py
  #           - front-end/
  #   ports:
  #     - 8503:8503

  sozinianer-api:
    extends:
      file: template.yml
      service: api
    environment:
      *sozinianer_env
    volumes:
      - $PWD/embedding_model:/embedding_model
    ports:
      - 8504:8504

  # front-end:
  #   build:
  #     context: .
  #     dockerfile: front-end.Dockerfile
  #   x-develop:
  #     watch:
  #       - action: sync
  #         path: ./front-end
  #         target: /app
  #         ignore:
  #           - ./front-end/node_modules/
  #       - action: rebuild
  #         path: ./front-end/package.json
  #   depends_on:
  #     api:
  #       condition: service_healthy
  #   networks:
  #     - net
  #   ports:
  #     - 8505:8505

